/*
 * MainFrame.java
 *
 * Created on 18.09.2011, 22:11:18
 */
package JavaO;
/**
 *
 * @author Nikita
 */


import java.io.IOException;
import java.io.File;
import java.io.FileReader;
import java.util.Arrays;
import javax.swing.JFileChooser;

public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        setResizable(false);
        RunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonActionPerformed(evt);
            }
        });
        
        Compiled = false;
        
        textFileChooserFilter = new TextFileChooserFilter();
        aboutFrame = new AboutFrame();
        helpContentsFrame = new HelpContentsFrame();

        fileChooser.setFileFilter(textFileChooserFilter);
        
        
        ByteCodeTableModel = new javax.swing.table.DefaultTableModel(null, ByteCodeTableColumns){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };

        ByteCodeTable.setModel(ByteCodeTableModel);
        ByteCodeTable.getColumnModel().getColumn(0).setPreferredWidth(25);
        
        StackStatesTableModel = new javax.swing.table.DefaultTableModel(null, StackStatesTableColumns);
        StackStatesTable.setModel(StackStatesTableModel);
        StackStatesTable.getColumnModel().getColumn(0).setPreferredWidth(25);
        
        columnModel = new javax.swing.table.DefaultTableColumnModel();
        ByteCodeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        SourceCodeTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultTextArea = new javax.swing.JTextArea();
        SourceCodeLabel = new javax.swing.JLabel();
        ResultLabel = new javax.swing.JLabel();
        CompileButton = new javax.swing.JButton();
        ByteCodeLabel = new javax.swing.JLabel();
        StackStatesLabel = new javax.swing.JLabel();
        RunButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ByteCodeTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        StackStatesTable = new javax.swing.JTable();
        MenuBar = new javax.swing.JMenuBar();
        FileMenuItem = new javax.swing.JMenu();
        MenuItemOpenFile = new javax.swing.JMenuItem();
        MenuItemNew = new javax.swing.JMenuItem();
        MenuItemSave = new javax.swing.JMenuItem();
        MenuItemSaveAs = new javax.swing.JMenuItem();
        MenuItemExit = new javax.swing.JMenuItem();
        RunMenu = new javax.swing.JMenu();
        MenuItemCompile = new javax.swing.JMenuItem();
        MenuItemRun = new javax.swing.JMenuItem();
        MenuItemHelp = new javax.swing.JMenu();
        MenuItemHelpContents = new javax.swing.JMenuItem();
        MenuItemAbout = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Source code file");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaO");

        SourceCodeTextArea.setColumns(20);
        SourceCodeTextArea.setRows(5);
        jScrollPane1.setViewportView(SourceCodeTextArea);

        ResultTextArea.setColumns(20);
        ResultTextArea.setEditable(false);
        ResultTextArea.setRows(5);
        jScrollPane2.setViewportView(ResultTextArea);

        SourceCodeLabel.setText("Source code");

        ResultLabel.setText("Result");

        CompileButton.setText("Compile");
        CompileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompileButtonActionPerformed(evt);
            }
        });

        ByteCodeLabel.setText("Byte-code");

        StackStatesLabel.setText("Stack states");

        RunButton.setText("   Run   ");

        ByteCodeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(ByteCodeTable);

        StackStatesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(StackStatesTable);

        FileMenuItem.setText("File");

        MenuItemOpenFile.setText("Open File ...");
        MenuItemOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemOpenFileActionPerformed(evt);
            }
        });
        FileMenuItem.add(MenuItemOpenFile);

        MenuItemNew.setText("New");
        MenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemNewActionPerformed(evt);
            }
        });
        FileMenuItem.add(MenuItemNew);

        MenuItemSave.setText("Save");
        FileMenuItem.add(MenuItemSave);

        MenuItemSaveAs.setText("Save as ...");
        FileMenuItem.add(MenuItemSaveAs);

        MenuItemExit.setText("Exit");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemExitActionPerformed(evt);
            }
        });
        FileMenuItem.add(MenuItemExit);

        MenuBar.add(FileMenuItem);

        RunMenu.setText("Run");

        MenuItemCompile.setText("Compile");
        MenuItemCompile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemCompileActionPerformed(evt);
            }
        });
        RunMenu.add(MenuItemCompile);

        MenuItemRun.setText("Run");
        MenuItemRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemRunActionPerformed(evt);
            }
        });
        RunMenu.add(MenuItemRun);

        MenuBar.add(RunMenu);

        MenuItemHelp.setText("Help");

        MenuItemHelpContents.setText("Help Contents");
        MenuItemHelpContents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemHelpContentsActionPerformed(evt);
            }
        });
        MenuItemHelp.add(MenuItemHelpContents);

        MenuItemAbout.setText("About");
        MenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAboutActionPerformed(evt);
            }
        });
        MenuItemHelp.add(MenuItemAbout);

        MenuBar.add(MenuItemHelp);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SourceCodeLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ResultLabel)
                                .addGap(261, 261, 261))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CompileButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(RunButton)))
                                .addGap(44, 44, 44)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ByteCodeLabel)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StackStatesLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CompileButton)
                    .addComponent(RunButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SourceCodeLabel)
                    .addComponent(ByteCodeLabel)
                    .addComponent(StackStatesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ResultLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public  void clearTextAreas(){
        ResultTextArea.setText("");
        ByteCodeTable.setModel(new javax.swing.table.DefaultTableModel(null, ByteCodeTableColumns));
        ByteCodeTable.getColumnModel().getColumn(0).setPreferredWidth(25);
        StackStatesTable.setModel(new javax.swing.table.DefaultTableModel(null, StackStatesTableColumns));
        //StackStatesTextArea.setText("");
    }
    
    private void CompileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompileButtonActionPerformed
        clearTextAreas();
        
        Text.SourceCode = SourceCodeTextArea.getText().getBytes();
        try{
            JavaO.compile();
            ResultTextArea.setText(VM.getResult());
            ByteCodeTableModel.setDataVector(VM.getByteCode(), new java.util.Vector(Arrays.asList(ByteCodeTableColumns)));
            ByteCodeTable.setModel(ByteCodeTableModel);
            ByteCodeTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            Compiled = true;
        }
        catch(Exception e){
            clearTextAreas();
            ResultTextArea.setText(ErrorMessage.getMessage());
            Compiled = false;
        }
    }//GEN-LAST:event_CompileButtonActionPerformed

    private void RunButtonActionPerformed(java.awt.event.ActionEvent evt){
        if(Compiled){
            JavaO.run();
            //StackStatesTextArea.setText(VM.getStackStates());
            ResultTextArea.setText(VM.getResult());
        }
        else{
            ResultTextArea.setText("Byte code not found!");
        }
    }
    
    private void MenuItemOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemOpenFileActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                SourceCodeTextArea.read( new FileReader( file.getAbsolutePath() ), null );
            }
            catch(IOException ex) {
                //System.out.println("problem accessing file "+file.getAbsolutePath());
                ResultTextArea.setText("problem accessing file "+file.getAbsolutePath());
            }
        }
        else{
            //System.out.println("File access cancelled by user.");
            ResultTextArea.setText("File access cancelled by user.");
        }
    }//GEN-LAST:event_MenuItemOpenFileActionPerformed

    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemExitActionPerformed
        //dispose();
        System.exit(0);
    }//GEN-LAST:event_MenuItemExitActionPerformed

    private void MenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuItemNewActionPerformed

    private void MenuItemCompileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemCompileActionPerformed
        CompileButtonActionPerformed(evt);
    }//GEN-LAST:event_MenuItemCompileActionPerformed

    private void MenuItemRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemRunActionPerformed
        RunButtonActionPerformed(evt);
    }//GEN-LAST:event_MenuItemRunActionPerformed

    private void MenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAboutActionPerformed
        aboutFrame.setVisible(true);
    }//GEN-LAST:event_MenuItemAboutActionPerformed

    private void MenuItemHelpContentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemHelpContentsActionPerformed
        helpContentsFrame.setVisible(true);
    }//GEN-LAST:event_MenuItemHelpContentsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    private boolean Compiled;
    private AboutFrame aboutFrame;
    private HelpContentsFrame helpContentsFrame;
    private TextFileChooserFilter textFileChooserFilter;
    
    javax.swing.table.DefaultTableModel ByteCodeTableModel;
    javax.swing.table.DefaultTableModel StackStatesTableModel;
    javax.swing.DefaultListSelectionModel selectionModel;
    javax.swing.table.DefaultTableColumnModel columnModel;
    
    javax.swing.table.TableColumn NumberColumn;
    javax.swing.table.TableColumn CodeColumn;
    javax.swing.table.TableColumn DescColumn;
    
    String ByteCodeTableColumns[] = {"Address", "Code", "Description"};
    String StackStatesTableColumns[] = {"Operands"};
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ByteCodeLabel;
    private javax.swing.JTable ByteCodeTable;
    private javax.swing.JButton CompileButton;
    private javax.swing.JMenu FileMenuItem;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem MenuItemAbout;
    private javax.swing.JMenuItem MenuItemCompile;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenu MenuItemHelp;
    private javax.swing.JMenuItem MenuItemHelpContents;
    private javax.swing.JMenuItem MenuItemNew;
    private javax.swing.JMenuItem MenuItemOpenFile;
    private javax.swing.JMenuItem MenuItemRun;
    private javax.swing.JMenuItem MenuItemSave;
    private javax.swing.JMenuItem MenuItemSaveAs;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JTextArea ResultTextArea;
    private javax.swing.JButton RunButton;
    private javax.swing.JMenu RunMenu;
    private javax.swing.JLabel SourceCodeLabel;
    private javax.swing.JTextArea SourceCodeTextArea;
    private javax.swing.JLabel StackStatesLabel;
    private javax.swing.JTable StackStatesTable;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
